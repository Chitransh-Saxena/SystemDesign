SOLID
    -> Single Responsibility Principle
        -> A class should not have more than 1 responsibility or a major functionality
    -> Open Closed Principle
    -> Liskov substitution Principle
    -> Interface segregation Principle
    -> Dependency Inversion Principle

Benefits
    -> Loose Coupling
        -> Entities are not dependent on each very much
        -> This enables to easily change one without affecting the other too much
    -> Code maintainability
    -> Dependency Management
